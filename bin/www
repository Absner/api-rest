#!/usr/bin/env node

/**
 * Module dependencies.
 */
var app    =   require('../app');
var debug  =   require('debug')('api-rest:server');
var http   =   require('http');

/**
 * agregando los puertos
 */
var port   =    normalizePort(process.env.PORT || '3000');
app.set("port", port);

/**
 * creando el servidor http
 */
var server  =   http.createServer(app);


server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
    console.log('\x1b[32m', 'API-REST v1.0.0 is running... ' + bind, '\x1b[0m');
    console.log('\x1b[37m', 'Ctrl+C to Stop', '\x1b[0m');
}
